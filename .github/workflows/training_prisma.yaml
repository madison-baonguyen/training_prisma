name: training_prisma
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image
        image: mysql
        # Provide the password for postgres
        env:
          MYSQL_USER: mysql
          MYSQL_PASSWORD: mysql
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 3306 on service container to the host
          - 3306:3306
    env:
      DATABASE_URL: mysql://mysql:mysql@localhost:3306/training_prisma

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: npm ci
      - run: npm run build
      # run the migration in the test database
      - run: npm run db:push
      # - run: npm run test
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' # Only deploy master
    needs: test
    steps:
      - uses: actions/checkout@v2
      # - name: Run production migration
      # Note: disabled migrate deploy in favour of using the Procfile release phase
      #   run: npm run migrate:deploy
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - uses: akhileshns/heroku-deploy@v3.12.12
        name: Deploy to Heroku
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}